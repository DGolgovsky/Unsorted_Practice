Реализовать на языке C два приложения: сервер (база данных) и клиент. Данные в базе хранятся в формате ключ-значение, определены следующие операции:

 

  * LIST                 - Вывести список доступных ключей

  * GET   <key>          - Получить значение по ключу <key>

  * PUT   <key> <value>  - Добавить в базу запись с ключом <key> и значением <value>;

                           если такая запись уже существует, перезаписать её

  * ERASE <key>          - Удалить запись с ключом <key> из таблицы

 

Требования к реализации базы данных:

 

  - И ключ, и значение являются ASCII-строками; максимальный размер ключа /

    значения не ограничен

  - Все записи, имеющие одинаковые значения, должны быть дедуплицированы

    (должен храниться только один экземпляр значения)

  - Все операции должны быть атомарны (не должно происходить изменения записи во

    время чтения её значения и т.д.)

  - База данных должна быть многопоточной (несколько операций не должны

    блокироваться при выполнении операций на непересекающихся данных)

  - База данных должна надежно сохранять данные на диск (считается, что диск

    надежен и не требуется дополнительной защиты данных)

 

Требования к серверу:

 

  - Сервер общается с клиентом посредством UNIX domain socket

  - Сервер должен уметь работать с несколькими клиентами одновременно

 

Общие требования к коду:

 

  - Стандарт языка C11

  - По возможности используйте простой Makefile для сборки проекта

  - Код должен стабильно работать как минимум в современных версиях

   Debian/Ubuntu/RHEL

 

В идеале, примерно так мы бы хотели протестировать ваше задание:

 

  $ tar xvf database.tar.gz

  $ cd database

  $ make

  $ ./server &

  $ ./client list

  $ ./client put foo bar

  $ ./client list

  foo

  $ ./client get foo

  bar

  $ ./client get baz

 

В первую очередь будет оцениваться дизайн приложений и корректность работы кода. Тем не менее, оформление кода имеет большое значение.
